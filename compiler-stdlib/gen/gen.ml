open StdLabels

let () =
  let archive_fn, oc =
    match Sys.argv with
    | [|_; "-stdlib"; archive_fn; "-o"; fn|] ->
      (archive_fn, open_out fn)
    | _ ->
      failwith "bad command line arguments"
  in

  (* The cma format is documented in typing/cmo_format.mli in the compiler sources *)
  let ic = open_in_bin archive_fn in
  let len_magic_number = String.length Config.cma_magic_number in
  let magic_number = really_input_string ic len_magic_number in
  assert (magic_number = Config.cma_magic_number);
  let toc_pos = input_binary_int ic in
  seek_in ic toc_pos;
  let toc = (input_value ic : Cmo_format.library) in
  close_in ic;

  let units =
    List.map toc.lib_units ~f:(fun cu -> cu.Cmo_format.cu_name)
    |> List.sort ~cmp:String.compare
  in

  let pr fmt = Printf.fprintf oc (fmt ^^ "\n") in
  pr "(* This file is automatically generated *)";
  pr "";
  let max_len =
    List.fold_left units ~init:0 ~f:(fun acc unit ->
      max acc (String.length unit))
  in
  List.iter units ~f:(fun u -> pr "module %-*s = %s" max_len u u);
  pr "";
  pr "include Pervasives";
  pr "";
  pr "exception Not_found = Not_found"
