<#def thisfile>index</#def>
<#def top>../index</#def>

<html>

<head>
<#iso>
<title>
ocamlgraph: <#fr>une bibliothèque de graphes pour Objective
Caml</#fr><#en>an ocaml graph library</#en>
</title>
<meta name="Keywords" content="ocaml graph library">
</head>

<body>

<h1>OCamlgraph</h1>

<#fr>OCamlgraph est une bibliothèque de graphes pour
 <a href="http://caml.inria.fr/">Objective Caml</a>.
Elle présente trois aspects différents:
<ul>
<li>
  Elle fournit un module <a href="doc/Pack.html">Graph.Pack</a>
  regroupant une structure de données pour des graphes et de nombreux
  opérations et algorithmes sur ces graphes.
  <p>
  Il est conseillé de jeter un oeil à ce module en premier lieu pour
  comprendre le genre de choses fournies par OCamlgraph. Voir aussi le
  fichier <a href="demo.ml">demo.ml</a>.

<li>Ensuite, OCamlgraph fournit plusieurs autres structrures de
  données pour les graphes, pour ceux qui ne se satisferaient pas de
  la précédente. Certaines sont <a
  href="doc/Persistent.html">persistentes</a> et d'autre <a
  href="doc/Imperative.html">impératives</a>. Certaines correspondent
  à des graphes orientés et d'autres à des graphes
  non-orientés. Certaines étiquettent les noeuds, d'autres les arêtes,
  d'autres les deux. etc.
  <p>
  L'interface <a href="doc/Sig.html">Sig</a> décrit les signatures des
  structures de données pour les graphes
  et les modules <a
   href="doc/Persistent.html">Persistent</a> et
   <a href="doc/Imperative.html">Imperative</a> fournissent des
  implantations.
  <p>
  Ces implantations sont écrites sous la forme de foncteurs : on
  spécifie le type des sommets, des arêtes, de leurs labels, etc. et
  on récupère alors une structure de données.

<p>

<li>Enfin, OCamlgraph fournit plusieurs opérations et algorithmes
  classiques sur les graphes. Ils sont également écrits comme des
  foncteurs, c'est-à-dire indépendamment de la structure de données
  pour les graphes. En conséquence, vous pouvez définir votre propre
  structure de données et réutiliser tous les algorithmes de cette
  bibliothèque -- il suffit de fournir quelques opérations telles que
  l'itération sur tous les sommets, sur tous les successeurs d'un
  noeud, etc. Voir par exmple le module <a href="doc/Path.html">Path</a>.

</ul>
</#fr>

<#en>
OCamlgraph is a graph library for <a
href="http://caml.inria.fr/">Objective Caml</a>.
Its contribution is three-fold:
<ul>
<li> It provides an easy-to-use graph data structure together with several
   operations and algorithms over graphs,
   in <a href="doc/Pack.html">Graph.Pack</a>.
   It is a reasonably efficient imperative data structure for directed graphs
   with vertices and edges labeled with integers.
   <p>
   Have a look at this module first in order to get an overview of what
   this library provides. See also <a href="demo.ml">demo.ml</a>.

<li> Then OCamlgraph provides several other graph implementations for those
   not satisfied with the one above. Some are <a
   href="doc/Persistent.html">persistent</a> (imutable) and other
   <a href="doc/Imperative.html">imperative</a> (mutable). Some are
   directed and other are not.
   Some have labels for vertices, or labels for edges, or both.
   Some have abstract types for vertices. etc.
   <p>
   See interface <a href="doc/Sig.html">Sig</a> for the graph
   signatures and modules <a
   href="doc/Persistent.html">Persistent</a> and
   <a href="doc/Imperative.html">Imperative</a> for the implementations.
   <p>
   These implementations are written as functors: you give the types of
   vertices labels, edge labels, etc. and you get the data structure as a
   result.

<p>

<li> Finally, OCamlgraph provides several classic operations and algorithms
   over graphs. They are also written as functors i.e. independently of the
   data structure for graphs. One consequence is that you can define your own
   data structure for graphs and yet re-use all the algorithms from this
   library -- you only need to provide a few operations such as iterating over
   all vertices, over the successors of a vertex, etc.
   See module <a href="doc/Path.html">Path</a> for an example.

</ul>
</#en>


<h4>Documentation</h4>

<#fr>Parcourir l'</#fr><#en>Browse the </#en><a href="doc">API</a>.
<#fr>Note : Tous les modules sont regroupés à l'intérieur d'un unique module
Graph.</#fr>
<#en>Note: all modules are packaged into a single module Graph</#en>.

<p>

<a href="FAQ">FAQ</a>

<p>
<#fr>Articles présentant OCamlgraph :</#fr>
<#en>Papers describing OCamlgraph:</#en>
<ul>
<#fr>
<li> <a href="http://www.lri.fr/~filliatr/ftp/publis/jfla05.ps.gz">Le foncteur
sonne toujours deux fois</a> (<a
href="http://pauillac.inria.fr/jfla/2005/">JFLA 2005</a>)
</#fr>
<li>
<a href="http://www.lri.fr/~filliatr/ftp/publis/ocamlgraph.ps">
Designing a Generic Graph Library using ML Functors</a>
(<a href="http://cs.shu.edu/tfp2007/">TFP 2007</a>)
</ul>

<p>

<#fr>Exemples de code :</#fr><#en>Code Examples:</#en>
<ul>
<li><a href="sudoku.ml">sudoku.ml</a> :
  <#fr>résolution du Sudoku en utilisant le module de coloration </#fr>
  <#en>solving the Sudoku using the graph coloring module</#en>
  <a href="doc/Coloring.html">Coloring</a>

<li><a href="demo_planar.ml">demo_planar.ml</a> :
  <#fr>dessine un <a href="doc/Rand.html">graphe planaire
  aléatoire</a>
  et illustre les <a href="doc/Traverse.html">parcours</a>
       en profondeur et en largeur et l'algorithme de <a
  href="doc/Path.html">Dijkstra</a></#fr>
   <#en>displays a <a href="doc/Rand.html">random planar graph</a>
   and demonstrates <a href="doc/Traverse.html">depth-first
   and breadth-first traversals</a> and <a
  href="doc/Path.html">Dijkstra's algorithm</a></#en>

<li><a href="color.ml">color.ml</a> :
  <#fr>dessine un <a href="doc/Rand.html">graphe planaire
  aléatoire</a>
  et le colorie avec 4 couleurs</#fr>
  <#en>displays a <a href="doc/Rand.html">random planar graph</a>
  and 4-color it</#en>
</ul>

<h4>Distribution</h4>

<#def LICENSE><a href="download/LICENSE">LICENSE</a></#def>

<#fr>
OCamlgraph est distribué librement, sous la licence GNU Library
General Public License version 2, avec une exception concernant
l'édition de lien décrite dans le fichier <#LICENSE>. <br>
Il est disponible sous forme de sources :
<ul>
<li><a href="download/ocamlgraph-<#version>.tar.gz">ocamlgraph-<#version>.tar.gz</a>
</ul>
Vous pouvez accéder à la <a href="download/">zone de téléchargement</a> directement.
Voici les derniers <a href="download/CHANGES">changements</a>.
</#fr>
<#en>
OCamlgraph is freely available, under the terms of the GNU Library
General Public License version 2, with the special exception on linking
described in file <#LICENSE>.
<br>
It is available as a source tarball:
<ul>
<li><a href="download/ocamlgraph-<#version>.tar.gz">ocamlgraph-<#version>.tar.gz</a>
</ul>
<p>
You can access the <a href="download/">download zone</a> directly.
Here are the recent <a href="download/CHANGES">CHANGES</a>.
</#en>

<p>

<#fr>Vous pouvez également accéder en lecture à la version de
  développement d'OCamlgraph sur github</#fr>
<#en>Alternatively, you can access the current development version
  on github:</#en>
<pre>
  <a href="https://github.com/backtracking/ocamlgraph">https://github.com/backtracking/ocamlgraph</a>
</pre>

<h4><#fr>Crédits</#fr><#en>Credits</#en></h4>

<#fr>Auteurs</#fr>
<#en>Authors</#en>
<ul>
<li><a href="http://www.lri.fr/~conchon/">Sylvain Conchon</a>
<li><a href="http://www.lri.fr/~filliatr/">Jean-Christophe Filliâtre</a>
<!-- <li><a href="http://www.lri.fr/~signoles/">Julien Signoles</a> -->
<li>Julien Signoles
</ul>

<p>

<#fr>Contributeurs extérieurs :</#fr>
<#en>External contributors:</#en>
<ul>
<li>Nicolas Ayache
<li><a href="http://www.ece.cmu.edu/~dbrumley/index.html">David Brumley</a>
<li>Pierre-Loïc Garoche
<li>Ivan Jager
<li>Ted Kremenek
<li>Marc Lasson
<li><a href="http://pauillac.inria.fr/~fpottier/">François Pottier</a>
<li><a href="http://cristal.inria.fr/~simonet/">Vincent Simonet</a>
<li><a href="http://mattam.org">Matthieu Sozeau</a>
<li><a href="http://www-imai.is.s.u-tokyo.ac.jp/~yuto/">Yuto Takei</a>
<li><a href="http://www.mweissmann.de/">Markus Wei&szlig;mann</a>
<li>Boris Yakobowski
</ul>

<p>
<hr>

<#drapeaux>

</body>
</html>
