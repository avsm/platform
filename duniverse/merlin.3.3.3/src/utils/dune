(rule (copy# ../platform/platform_misc.c platform_misc.c))

(rule
 (targets menhirLib.ml menhirLib.mli)
 (mode promote)
 (action
  (progn
   (copy %{lib:menhirLib:menhirLib.ml}  menhirLib.ml)
   (copy %{lib:menhirLib:menhirLib.mli} menhirLib.mli))))

(library
 (name merlin_utils)
 (wrapped false)
 (libraries str yojson unix)
 (c_names platform_misc))

; [Printf.ifprintf] doesn't have the right type before ocaml/ocaml#201, and
; [make_iprintf] doesn't exist before ocaml/ocaml#267

(rule
 (targets logger_helper.ml)
 (enabled_if (>= %{ocaml_version} 4.03.0))
 (action (with-stdout-to %{targets}
          (echo "let ifprintf oc fmt = Printf.ifprintf oc fmt"))))

(rule
 (targets logger_helper.ml)
 (enabled_if (< %{ocaml_version} 4.03.0))
 (action
  (with-stdout-to %{targets}
   (echo "let ifprintf oc (CamlinternalFormatBasics.Format (fmt, _)) =\n\
            CamlinternalFormat.make_printf (fun _ _ -> ()) oc End_of_acc fmt"))))

