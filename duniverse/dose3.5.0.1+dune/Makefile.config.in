VERSION=@PACKAGE_VERSION@
NAME=@PACKAGE_NAME@

CFLAGS=@CFLAGS@ -fPIC -Wall -pedantic -Werror -Wno-long-long -warn-error FPSXY
CPPFLAGS=@CPPFLAGS@
LDFLAGS=@LDFLAGS@
CPPOFLAGS=@CPPOFLAGS@
OCAMLFIND=@OCAMLFIND@

DOSELIBS = _build/doselibs

BINDIR = @prefix@@bindir@
# if prefix is /usr/local (default), then we use ocamlfind, 
# otherwise use build the destdir using the given prefix
ifeq (@prefix@,/usr/local)
  ifeq ("@OCAML_OS_TYPE@","Win32")
    LIBDIR=$(shell ocamlfind printconf destdir | cygpath -f - -m)
  else
    LIBDIR = $(shell ocamlfind printconf destdir)
  endif
else
  LIBDIR = @prefix@@libdir@/ocaml/$(shell ocamlc -version)
endif

# if DESTDIR is specified, we ignore the prefix and we use the 
# default debian location
ifneq ($(DESTDIR),)
  BINDIR = $(DESTDIR)@bindir@
  LIBDIR = $(DESTDIR)@libdir@/ocaml
endif

INSTALL=$(OCAMLFIND) install -destdir $(LIBDIR)
UNINSTALL=$(OCAMLFIND) remove -destdir $(LIBDIR)

printconf:
	@echo
	@for i in "cudf re.pcre extlib ocamlgraph"; do \
		m=`ocamlfind query -format "%p: %v" $$i`; \
		echo "$$m\n"; \
	done
	@echo "DESTDIR: $(DESTDIR)"
	@echo "OCAMLFIND_DESTDIR: $(OCAMLFIND_DESTDIR)"
	@echo "Prefix: @prefix@"
	@echo "Libdir: $(LIBDIR)"
	@echo "Bindir: $(BINDIR)"
	@echo "OCAML_OS_TYPE: @OCAML_OS_TYPE@"
	@echo "OCAML_SYSTEM: @OCAML_SYSTEM@"
	@echo "Code type: @OCAMLEXT@"
	@echo "----------------------"
	@echo "Install: $(INSTALL)"
	@echo "Remove: $(UNINSTALL)"
	@echo

ifeq ("@OCAML_OS_TYPE@","freebsd")
  LDFLAGS += -fstack-protector
endif

LN = @LN@
ifeq ("@OCAML_OS_TYPE@","Win32")
  EXE=.exe
else
  EXE=
endif

ifeq ("@OCAMLEXT@","native")
  OCAMLBUILD=@OCAMLBUILD@
  ifeq ("@OCAML_SYSTEM@","mingw")
    INSTALLOPTS=-s --strip-program=i686-w64-mingw32-strip
  else
  ifeq ("@OCAML_SYSTEM@","mingw64")
    INSTALLOPTS=-s --strip-program=x86_64-w64-mingw32-strip
  else
  ifeq ("@OCAML_OS_TYPE@","Win32")
    INSTALLOPTS=
  else
    INSTALLOPTS=-s
  endif
  endif
  endif
else
  OCAMLBUILD=@OCAMLBUILD@ -byte-plugin
  INSTALLOPTS=
endif

OCAMLEXT=@OCAMLEXT@

TARGETS= \
   distcheck.@OCAMLEXT@ \
	 deb-buildcheck.@OCAMLEXT@ \
   ceve.@OCAMLEXT@ \
   apt-cudf.@OCAMLEXT@ \
	 outdated.@OCAMLEXT@ \
	 challenged.@OCAMLEXT@ \
   deb-coinstall.@OCAMLEXT@

BYTELIBS=
OPTLIBS=
CMXSLIBS=
ALIBS=
SUFFIX=cma

ifeq ("@HAS_LIBCUDF@","no")
  LIBNAMES += cudf/cudf
endif

LIBNAMES += common/common \
						versioning/versioning \
						pef/pef \
						npm/npm \
						deb/debian \
						opencsw/csw \
						opam/opam \
						algo/algo

#rpm support
ifeq ("@HAS_RPM@","yes")
  LIBNAMES += rpm/rpm
endif

LIBNAMES += doseparseNoRpm/doseparseNoRpm \
						doseparse/doseparse

BYTELIBNAMES=$(notdir $(LIBNAMES))
BYTELIBS=$(BYTELIBNAMES:%=$(DOSELIBS)/%.cma)

ifeq ("@HAS_LIBCUDF@","no")
installcudf:
	$(MAKE) -C cudf all @OCAMLEXT@ install
uninstallcudf:
	$(MAKE) -C cudf uninstall
else
installcudf:
uninstallcudf:
endif

ifeq ("@OCAMLEXT@","native")
  SUFFIX += cmxa cmxs a
  OPTLIBS += $(BYTELIBS:%.cma=%.cmxa) 
  CMXSLIBS += $(BYTELIBS:%.cma=%.cmxs)
  ALIBS = $(BYTELIBS:%.cma=%.a)
endif

ifeq ("@HAS_XML@","yes")
ifeq ("@HAS_CURL@","yes")
  EXPERIMENTAL += experimental/dudftocudf/deb-dudftocudf.@OCAMLEXT@
endif
endif

#ocamlgraph support
ifeq ("@HAS_OCAMLGRAPH@","yes")
  TARGETS += \
	     strong-deps.@OCAMLEXT@ \
	     dominators-graph.@OCAMLEXT@
  
  EXPERIMENTAL += strong-conflicts.@OCAMLEXT@
endif

#ocamlgraph support
ifeq ("@HAS_OCAMLGRAPH@","yes")
  TARGETS += \
	     smallworld.@OCAMLEXT@
endif

#ounit support
ifeq ("@HAS_OUNIT@","yes")
  TESTS= common versioning npm deb algo pef opam $(TEST_RPM)
endif
